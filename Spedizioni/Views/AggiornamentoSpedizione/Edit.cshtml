@model Spedizioni.Models.AggiornamentoSpedizione

@{
    ViewBag.Title = "Edit";
}

<div class="d-flex flex-column font-monospace">
    <h2>Modifica Aggiornamento</h2>


</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal font-monospace">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.IDAggiornamento)

        <div class="form-group">
            @Html.LabelFor(model => model.FK_IDSpedizione, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FK_IDSpedizione, (IEnumerable<SelectListItem>)ViewBag.FK_IDSpedizioneList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FK_IDSpedizione, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StatoSped, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StatoSped, (IEnumerable<SelectListItem>)ViewBag.StatoSped, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatoSped, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LuogoPacco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LuogoPacco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuogoPacco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescrizEvento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescrizEvento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescrizEvento, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group my-2">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-warning btn-custom btn-sm">
                    <i class="bi bi-check2-square"></i> Salva
                </button>
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index")" class="btn btn-warning btn-custom btn-sm">
        <i class="bi bi-arrow-left-square"></i> Indietro
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
